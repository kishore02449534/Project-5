Goal of our project: Build a Naive Bayes classifier to automatically identify spam SMS messages. Analysis focus on  Evaluating the effectiveness of the Naive Bayes classifier for this specific spam filtering task.

Dataset: SMS Spam Collection Dataset (5,572 labeled messages labeled as "spam" or "ham.").  And suitable because it's clean, balanced, and has clear labels.

Data processing:  Convert SMS messages to numbers using CountVectorizer (bag-of-words).

Analysis Technique: Multinomial Naive Bayes classifier (well-suited for text and word frequency analysis).

Data split: 80% training data, 20% testing data.

Why  multinomial naive bayes: effectiveness in text classification, especially with word frequencies.

Results:
Model Accuracy: 0.99
Precision (Ham): 0.99
Recall (Ham): 1.00
F1 Score (Ham): 1.00
Precision (Spam): 1.00
Recall (Spam): 0.94
F1 Score (Spam): 0.97

Alternative Approach: Train and evaluate a Logistic Regression classifier.

Why this project is useful?
Improves user experience and security by filtering unwanted or harmful content and protects against phishing attacks and scams.

Relevance: Essential for companies handling large amounts of text data (email providers, social media platforms).

It helps prevent users from being exposed to unwanted or malicious content.
